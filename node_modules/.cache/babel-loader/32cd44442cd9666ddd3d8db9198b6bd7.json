{"ast":null,"code":"var _jsxFileName = \"/Users/charleswang/Desktop/coding learning/web/projects/project2/src/client/react/components/create.js\";\nimport React from \"react\";\nimport * as actions from \"../../redux/actions/actions\";\nimport { connect } from 'react-redux';\nimport { withRouter } from \"react-router-dom\";\nimport InputForm from \"./inputForm\";\nconst WithRouterForm = withRouter(InputForm);\n\nclass Create extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.componentDidMount = () => {\n      this.props.getAllList();\n    };\n  }\n\n  render() {\n    return React.createElement(WithRouterForm, {\n      userdata: {\n        _id: \"\",\n        Avatar: \"\",\n        Name: \"\",\n        Sex: \"\",\n        Rank: \"\",\n        StartDate: \"\",\n        Phone: \"\",\n        Email: \"\",\n        Superior: \"\",\n        SuperiorName: \"\"\n      },\n      nameIdList: this.props.allList.data,\n      use: \"create\",\n      createOne: this.props.createOne,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    });\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    allList: state.nameIdReducer\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getAllList: () => {\n      dispatch(actions.getAllList());\n    },\n    getList: (search, sortArea, sortFunc, page) => {\n      dispatch(actions.getList(search, sortArea, sortFunc, page));\n    },\n    getListOne: Id => {\n      dispatch(actions.getListOne(Id));\n    },\n    getDS: OfficerId => {\n      dispatch(actions.getDS(OfficerId));\n    },\n    createOne: (user, history) => {\n      dispatch(actions.createOne(user, history));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Create);","map":{"version":3,"sources":["/Users/charleswang/Desktop/coding learning/web/projects/project2/src/client/react/components/create.js"],"names":["React","actions","connect","withRouter","InputForm","WithRouterForm","Create","Component","componentDidMount","props","getAllList","render","_id","Avatar","Name","Sex","Rank","StartDate","Phone","Email","Superior","SuperiorName","allList","data","createOne","mapStateToProps","state","nameIdReducer","mapDispatchToProps","dispatch","getList","search","sortArea","sortFunc","page","getListOne","Id","getDS","OfficerId","user","history"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,OAAZ,MAAyB,6BAAzB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,UAAR,QAAyB,kBAAzB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,MAAMC,cAAc,GAAGF,UAAU,CAACC,SAAD,CAAjC;;AACA,MAAME,MAAN,SAAqBN,KAAK,CAACO,SAA3B,CAAoC;AAAA;AAAA;;AAAA,SAClCC,iBADkC,GACd,MAAM;AACxB,WAAKC,KAAL,CAAWC,UAAX;AACD,KAHiC;AAAA;;AAIlCC,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,cAAD;AACE,MAAA,QAAQ,EAAE;AAACC,QAAAA,GAAG,EAAC,EAAL;AAASC,QAAAA,MAAM,EAAE,EAAjB;AAAqBC,QAAAA,IAAI,EAAE,EAA3B;AACRC,QAAAA,GAAG,EAAE,EADG;AACCC,QAAAA,IAAI,EAAE,EADP;AACWC,QAAAA,SAAS,EAAE,EADtB;AAERC,QAAAA,KAAK,EAAE,EAFC;AAEGC,QAAAA,KAAK,EAAE,EAFV;AAGRC,QAAAA,QAAQ,EAAE,EAHF;AAGKC,QAAAA,YAAY,EAAC;AAHlB,OADZ;AAKE,MAAA,UAAU,EAAE,KAAKZ,KAAL,CAAWa,OAAX,CAAmBC,IALjC;AAME,MAAA,GAAG,EAAC,QANN;AAOE,MAAA,SAAS,EAAE,KAAKd,KAAL,CAAWe,SAPxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAWD;;AAhBiC;;AAkBpC,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLJ,IAAAA,OAAO,EAAEI,KAAK,CAACC;AADV,GAAP;AAGD,CAJD;;AAMA,MAAMC,kBAAkB,GAAGC,QAAQ,IAAI;AACrC,SAAO;AACLnB,IAAAA,UAAU,EAAE,MAAM;AAChBmB,MAAAA,QAAQ,CAAC5B,OAAO,CAACS,UAAR,EAAD,CAAR;AACD,KAHI;AAILoB,IAAAA,OAAO,EAAE,CAACC,MAAD,EAAQC,QAAR,EAAiBC,QAAjB,EAA0BC,IAA1B,KAAmC;AAC1CL,MAAAA,QAAQ,CAAC5B,OAAO,CAAC6B,OAAR,CAAgBC,MAAhB,EAAuBC,QAAvB,EAAgCC,QAAhC,EAAyCC,IAAzC,CAAD,CAAR;AACD,KANI;AAOLC,IAAAA,UAAU,EAAGC,EAAD,IAAQ;AAClBP,MAAAA,QAAQ,CAAC5B,OAAO,CAACkC,UAAR,CAAmBC,EAAnB,CAAD,CAAR;AACD,KATI;AAULC,IAAAA,KAAK,EAAGC,SAAD,IAAe;AACpBT,MAAAA,QAAQ,CAAC5B,OAAO,CAACoC,KAAR,CAAcC,SAAd,CAAD,CAAR;AACD,KAZI;AAaLd,IAAAA,SAAS,EAAE,CAACe,IAAD,EAAMC,OAAN,KAAkB;AAC3BX,MAAAA,QAAQ,CAAC5B,OAAO,CAACuB,SAAR,CAAkBe,IAAlB,EAAwBC,OAAxB,CAAD,CAAR;AACD;AAfI,GAAP;AAiBD,CAlBD;;AAoBA,eAAetC,OAAO,CAACuB,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CtB,MAA7C,CAAf","sourcesContent":["import React from \"react\";\nimport * as actions from \"../../redux/actions/actions\"\nimport {connect} from 'react-redux';\nimport {withRouter} from \"react-router-dom\";\nimport InputForm from \"./inputForm\";\nconst WithRouterForm = withRouter(InputForm);\nclass Create extends React.Component{\n  componentDidMount = () => {\n    this.props.getAllList();\n  }\n  render() {\n    return (\n      <WithRouterForm\n        userdata={{_id:\"\", Avatar: \"\", Name: \"\",\n          Sex: \"\", Rank: \"\", StartDate: \"\",\n          Phone: \"\", Email: \"\", \n          Superior: \"\",SuperiorName:\"\"}}\n        nameIdList={this.props.allList.data}\n        use=\"create\"\n        createOne={this.props.createOne}\n      />\n      );\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    allList: state.nameIdReducer\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getAllList: () => {\n      dispatch(actions.getAllList());\n    },\n    getList: (search,sortArea,sortFunc,page) => {\n      dispatch(actions.getList(search,sortArea,sortFunc,page));\n    },\n    getListOne: (Id) => {\n      dispatch(actions.getListOne(Id));\n    },\n    getDS: (OfficerId) => {\n      dispatch(actions.getDS(OfficerId));\n    },\n    createOne: (user,history) => {\n      dispatch(actions.createOne(user, history));\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Create);"]},"metadata":{},"sourceType":"module"}