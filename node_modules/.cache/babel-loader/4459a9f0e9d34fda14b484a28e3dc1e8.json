{"ast":null,"code":"var _jsxFileName = \"/Users/charleswang/Desktop/coding learning/web/projects/project2/src/client/react/components/Home.js\";\nimport React from \"react\";\nimport { connect } from 'react-redux';\nimport * as actions from \"../../redux/actions/actions\";\nimport UserList from \"./UserList\";\nimport { withRouter } from 'react-router-dom';\nimport InfiniteScroll from 'react-infinite-scroller';\nconst WithRouterList = withRouter(UserList);\nvar page = 1;\nconst style = {\n  height: \"100px\",\n  overflow: \"auto\"\n};\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.loadMore = () => {\n      page = page + 1;\n      this.props.getList(\"\", \"\", \"\", page);\n      console.log(page + \"in mount\");\n    };\n\n    this.state = {\n      page: 1\n    };\n  }\n\n  componentDidMount() {\n    this.refs.myscroll.addEventListener(\"scroll\", () => {\n      console.log(this.refs.myscroll.scrollTop);\n\n      if (this.refs.myscroll.scrollTop + this.refs.myscroll.clientHeight > this.refs.myscroll.scrollHeight + 50) {\n        this.loadMore();\n      }\n    });\n    this.props.clear();\n    this.props.getList(\"\", \"\", \"\", page);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      ref: \"myscroll\",\n      style: {\n        height: \"200px\",\n        overflow: \"auto\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(WithRouterList, {\n      userList: this.props.userList,\n      getListOne: this.props.getListOne,\n      getDS: this.props.getDS,\n      deleteOneUser: this.props.deleteOneUser,\n      getOneUser: this.props.getOneUser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    userList: state.userListReducer\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getList: (search, sortArea, sortFunc, page) => {\n      dispatch(actions.getList(search, sortArea, sortFunc, page));\n    },\n    getListOne: Id => {\n      dispatch(actions.getListOne(Id));\n    },\n    getDS: OfficerId => {\n      dispatch(actions.getDS(OfficerId));\n    },\n    deleteOneUser: user => {\n      dispatch(actions.deleteOneUser(user));\n    },\n    clear: () => {\n      dispatch(actions.clear());\n    },\n    getOneUser: (id, history) => {\n      dispatch(actions.getOneUser(id, history));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);","map":{"version":3,"sources":["/Users/charleswang/Desktop/coding learning/web/projects/project2/src/client/react/components/Home.js"],"names":["React","connect","actions","UserList","withRouter","InfiniteScroll","WithRouterList","page","style","height","overflow","Home","Component","constructor","props","loadMore","getList","console","log","state","componentDidMount","refs","myscroll","addEventListener","scrollTop","clientHeight","scrollHeight","clear","render","userList","getListOne","getDS","deleteOneUser","getOneUser","mapStateToProps","userListReducer","mapDispatchToProps","dispatch","search","sortArea","sortFunc","Id","OfficerId","user","id","history"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport {connect} from 'react-redux';\nimport * as actions from \"../../redux/actions/actions\"\nimport UserList from \"./UserList\"\nimport {withRouter} from 'react-router-dom';\nimport InfiniteScroll from 'react-infinite-scroller';\nconst WithRouterList = withRouter(UserList);\nvar page = 1;\nconst style = {height:\"100px\",overflow:\"auto\"}\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {page:1};\n  }\n  componentDidMount() {\n    this.refs.myscroll.addEventListener(\"scroll\", () => {\n      console.log(this.refs.myscroll.scrollTop);\n      if (\n        this.refs.myscroll.scrollTop + this.refs.myscroll.clientHeight >\n        this.refs.myscroll.scrollHeight + 50\n      ) {\n        this.loadMore();\n      }\n    });\n    this.props.clear();\n    this.props.getList(\"\",\"\",\"\",page);\n    \n  }\n  loadMore = () => {\n    page = page+1;\n    this.props.getList(\"\",\"\",\"\",page);\n    console.log(page+\"in mount\");\n  }\n  render() {\n    return (\n      <div\n        className=\"App\"\n        ref=\"myscroll\"\n        style={{ height: \"200px\", overflow: \"auto\" }}\n      >\n          <WithRouterList\n            userList={this.props.userList}\n            getListOne={this.props.getListOne}\n            getDS={this.props.getDS}\n            deleteOneUser={this.props.deleteOneUser}\n            getOneUser={this.props.getOneUser}\n        />\n      </div>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    userList: state.userListReducer\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getList: (search,sortArea,sortFunc,page) => {\n      dispatch(actions.getList(search,sortArea,sortFunc,page));\n    },\n    getListOne: (Id) => {\n      dispatch(actions.getListOne(Id));\n    },\n    getDS: (OfficerId) => {\n      dispatch(actions.getDS(OfficerId));\n    },\n    deleteOneUser: (user) => {\n      dispatch(actions.deleteOneUser(user));\n    },\n    clear: () => {\n      dispatch(actions.clear());\n    },\n    getOneUser: (id,history) => {\n      dispatch(actions.getOneUser(id,history))\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);"]},"metadata":{},"sourceType":"module"}