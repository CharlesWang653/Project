{"ast":null,"code":"var _jsxFileName = \"/Users/charleswang/Desktop/coding learning/web/projects/project2/src/client/react/components/create.js\";\nimport React from \"react\";\nimport * as actions from \"../../redux/actions/actions\";\nimport { connect } from 'react-redux';\nimport { withRouter } from \"react-router-dom\";\nimport InputForm from \"./inputForm\";\nconst WithRouterForm = withRouter(InputForm);\n\nclass Create extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.componentDidMount = () => {\n      this.props.getAllList();\n    };\n  }\n\n  render() {\n    return React.createElement(WithRouterForm, {\n      userdata: this.props.user.data,\n      nameIdList: this.props.allList.data,\n      updateOne: this.props.updateOne,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    });\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    userList: state.userListReducer\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getList: (search, sortArea, sortFunc, page) => {\n      dispatch(actions.getList(search, sortArea, sortFunc, page));\n    },\n    getListOne: Id => {\n      dispatch(actions.getListOne(Id));\n    },\n    getDS: OfficerId => {\n      dispatch(actions.getDS(OfficerId));\n    },\n    createOne: (user, history) => {\n      dispatch(actions.createOne(user, history));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Create);","map":{"version":3,"sources":["/Users/charleswang/Desktop/coding learning/web/projects/project2/src/client/react/components/create.js"],"names":["React","actions","connect","withRouter","InputForm","WithRouterForm","Create","Component","componentDidMount","props","getAllList","render","user","data","allList","updateOne","mapStateToProps","state","userList","userListReducer","mapDispatchToProps","dispatch","getList","search","sortArea","sortFunc","page","getListOne","Id","getDS","OfficerId","createOne","history"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,OAAZ,MAAyB,6BAAzB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,UAAR,QAAyB,kBAAzB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,MAAMC,cAAc,GAAGF,UAAU,CAACC,SAAD,CAAjC;;AACA,MAAME,MAAN,SAAqBN,KAAK,CAACO,SAA3B,CAAoC;AAAA;AAAA;;AAAA,SAClCC,iBADkC,GACd,MAAM;AACxB,WAAKC,KAAL,CAAWC,UAAX;AACD,KAHiC;AAAA;;AAIlCC,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,cAAD;AACE,MAAA,QAAQ,EAAE,KAAKF,KAAL,CAAWG,IAAX,CAAgBC,IAD5B;AAEE,MAAA,UAAU,EAAE,KAAKJ,KAAL,CAAWK,OAAX,CAAmBD,IAFjC;AAGE,MAAA,SAAS,EAAE,KAAKJ,KAAL,CAAWM,SAHxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAOD;;AAZiC;;AAcpC,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLC,IAAAA,QAAQ,EAAED,KAAK,CAACE;AADX,GAAP;AAGD,CAJD;;AAMA,MAAMC,kBAAkB,GAAGC,QAAQ,IAAI;AACrC,SAAO;AACLC,IAAAA,OAAO,EAAE,CAACC,MAAD,EAAQC,QAAR,EAAiBC,QAAjB,EAA0BC,IAA1B,KAAmC;AAC1CL,MAAAA,QAAQ,CAACpB,OAAO,CAACqB,OAAR,CAAgBC,MAAhB,EAAuBC,QAAvB,EAAgCC,QAAhC,EAAyCC,IAAzC,CAAD,CAAR;AACD,KAHI;AAILC,IAAAA,UAAU,EAAGC,EAAD,IAAQ;AAClBP,MAAAA,QAAQ,CAACpB,OAAO,CAAC0B,UAAR,CAAmBC,EAAnB,CAAD,CAAR;AACD,KANI;AAOLC,IAAAA,KAAK,EAAGC,SAAD,IAAe;AACpBT,MAAAA,QAAQ,CAACpB,OAAO,CAAC4B,KAAR,CAAcC,SAAd,CAAD,CAAR;AACD,KATI;AAULC,IAAAA,SAAS,EAAE,CAACnB,IAAD,EAAMoB,OAAN,KAAkB;AAC3BX,MAAAA,QAAQ,CAACpB,OAAO,CAAC8B,SAAR,CAAkBnB,IAAlB,EAAwBoB,OAAxB,CAAD,CAAR;AACD;AAZI,GAAP;AAcD,CAfD;;AAiBA,eAAe9B,OAAO,CAACc,eAAD,EAAkBI,kBAAlB,CAAP,CAA6Cd,MAA7C,CAAf","sourcesContent":["import React from \"react\";\nimport * as actions from \"../../redux/actions/actions\"\nimport {connect} from 'react-redux';\nimport {withRouter} from \"react-router-dom\";\nimport InputForm from \"./inputForm\";\nconst WithRouterForm = withRouter(InputForm);\nclass Create extends React.Component{\n  componentDidMount = () => {\n    this.props.getAllList();\n  }\n  render() {\n    return (\n      <WithRouterForm\n        userdata={this.props.user.data}\n        nameIdList={this.props.allList.data}\n        updateOne={this.props.updateOne}\n      />\n      );\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    userList: state.userListReducer\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getList: (search,sortArea,sortFunc,page) => {\n      dispatch(actions.getList(search,sortArea,sortFunc,page));\n    },\n    getListOne: (Id) => {\n      dispatch(actions.getListOne(Id));\n    },\n    getDS: (OfficerId) => {\n      dispatch(actions.getDS(OfficerId));\n    },\n    createOne: (user,history) => {\n      dispatch(actions.createOne(user, history));\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Create);"]},"metadata":{},"sourceType":"module"}