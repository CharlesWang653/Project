{"ast":null,"code":"var _jsxFileName = \"/Users/charleswang/Desktop/coding learning/web/projects/project2/src/client/react/components/Home.js\";\nimport React from \"react\";\nimport { connect } from 'react-redux';\nimport * as actions from \"../../redux/actions/actions\";\nimport UserList from \"./UserList\";\nimport { withRouter } from 'react-router-dom';\nimport InfiniteScroll from 'react-infinite-scroller';\nconst WithRouterList = withRouter(UserList);\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      page: 1\n    };\n  }\n\n  componentDidMount() {\n    this.props.clear();\n    this.props.getList(\"\", \"\", \"\", 1);\n  }\n\n  render() {\n    this.props.getList(\"\", \"\", \"\", this.state.page);\n    return React.createElement(InfiniteScroll, {\n      pageStart: 0,\n      loadMore: () => {\n        this.setState({\n          page: this.state.page + 1\n        });\n      },\n      hasMore: true || false,\n      loader: React.createElement(\"div\", {\n        className: \"loader\",\n        key: 0,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, \"Loading ...\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(WithRouterList, {\n      userList: this.props.userList,\n      getListOne: this.props.getListOne,\n      getDS: this.props.getDS,\n      deleteOneUser: this.props.deleteOneUser,\n      getOneUser: this.props.getOneUser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    userList: state.userListReducer\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getList: (search, sortArea, sortFunc, page) => {\n      dispatch(actions.getList(search, sortArea, sortFunc, page));\n    },\n    getListOne: Id => {\n      dispatch(actions.getListOne(Id));\n    },\n    getDS: OfficerId => {\n      dispatch(actions.getDS(OfficerId));\n    },\n    deleteOneUser: user => {\n      dispatch(actions.deleteOneUser(user));\n    },\n    clear: () => {\n      dispatch(actions.clear());\n    },\n    getOneUser: (id, history) => {\n      dispatch(actions.getOneUser(id, history));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);","map":{"version":3,"sources":["/Users/charleswang/Desktop/coding learning/web/projects/project2/src/client/react/components/Home.js"],"names":["React","connect","actions","UserList","withRouter","InfiniteScroll","WithRouterList","Home","Component","constructor","props","state","page","componentDidMount","clear","getList","render","setState","userList","getListOne","getDS","deleteOneUser","getOneUser","mapStateToProps","userListReducer","mapDispatchToProps","dispatch","search","sortArea","sortFunc","Id","OfficerId","user","id","history"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAO,KAAKC,OAAZ,MAAyB,6BAAzB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAAQC,UAAR,QAAyB,kBAAzB;AACA,OAAOC,cAAP,MAA2B,yBAA3B;AACA,MAAMC,cAAc,GAAGF,UAAU,CAACD,QAAD,CAAjC;;AACA,MAAMI,IAAN,SAAmBP,KAAK,CAACQ,SAAzB,CAAmC;AACjCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAACC,MAAAA,IAAI,EAAC;AAAN,KAAb;AACD;;AACDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKH,KAAL,CAAWI,KAAX;AACA,SAAKJ,KAAL,CAAWK,OAAX,CAAmB,EAAnB,EAAsB,EAAtB,EAAyB,EAAzB,EAA4B,CAA5B;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,SAAKN,KAAL,CAAWK,OAAX,CAAmB,EAAnB,EAAsB,EAAtB,EAAyB,EAAzB,EAA4B,KAAKJ,KAAL,CAAWC,IAAvC;AACA,WACE,oBAAC,cAAD;AACE,MAAA,SAAS,EAAE,CADb;AAEE,MAAA,QAAQ,EAAE,MAAM;AAAC,aAAKK,QAAL,CAAc;AAACL,UAAAA,IAAI,EAAC,KAAKD,KAAL,CAAWC,IAAX,GAAkB;AAAxB,SAAd;AAA0C,OAF7D;AAGE,MAAA,OAAO,EAAE,QAAQ,KAHnB;AAIE,MAAA,MAAM,EAAE;AAAK,QAAA,SAAS,EAAC,QAAf;AAAwB,QAAA,GAAG,EAAE,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKE,oBAAC,cAAD;AACE,MAAA,QAAQ,EAAE,KAAKF,KAAL,CAAWQ,QADvB;AAEE,MAAA,UAAU,EAAE,KAAKR,KAAL,CAAWS,UAFzB;AAGE,MAAA,KAAK,EAAE,KAAKT,KAAL,CAAWU,KAHpB;AAIE,MAAA,aAAa,EAAE,KAAKV,KAAL,CAAWW,aAJ5B;AAKE,MAAA,UAAU,EAAE,KAAKX,KAAL,CAAWY,UALzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,CADF;AAeD;;AA3BgC;;AA6BnC,MAAMC,eAAe,GAAGZ,KAAK,IAAI;AAC/B,SAAO;AACLO,IAAAA,QAAQ,EAAEP,KAAK,CAACa;AADX,GAAP;AAGD,CAJD;;AAMA,MAAMC,kBAAkB,GAAGC,QAAQ,IAAI;AACrC,SAAO;AACLX,IAAAA,OAAO,EAAE,CAACY,MAAD,EAAQC,QAAR,EAAiBC,QAAjB,EAA0BjB,IAA1B,KAAmC;AAC1Cc,MAAAA,QAAQ,CAACxB,OAAO,CAACa,OAAR,CAAgBY,MAAhB,EAAuBC,QAAvB,EAAgCC,QAAhC,EAAyCjB,IAAzC,CAAD,CAAR;AACD,KAHI;AAILO,IAAAA,UAAU,EAAGW,EAAD,IAAQ;AAClBJ,MAAAA,QAAQ,CAACxB,OAAO,CAACiB,UAAR,CAAmBW,EAAnB,CAAD,CAAR;AACD,KANI;AAOLV,IAAAA,KAAK,EAAGW,SAAD,IAAe;AACpBL,MAAAA,QAAQ,CAACxB,OAAO,CAACkB,KAAR,CAAcW,SAAd,CAAD,CAAR;AACD,KATI;AAULV,IAAAA,aAAa,EAAGW,IAAD,IAAU;AACvBN,MAAAA,QAAQ,CAACxB,OAAO,CAACmB,aAAR,CAAsBW,IAAtB,CAAD,CAAR;AACD,KAZI;AAaLlB,IAAAA,KAAK,EAAE,MAAM;AACXY,MAAAA,QAAQ,CAACxB,OAAO,CAACY,KAAR,EAAD,CAAR;AACD,KAfI;AAgBLQ,IAAAA,UAAU,EAAE,CAACW,EAAD,EAAIC,OAAJ,KAAgB;AAC1BR,MAAAA,QAAQ,CAACxB,OAAO,CAACoB,UAAR,CAAmBW,EAAnB,EAAsBC,OAAtB,CAAD,CAAR;AACD;AAlBI,GAAP;AAoBD,CArBD;;AAuBA,eAAejC,OAAO,CAACsB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6ClB,IAA7C,CAAf","sourcesContent":["import React from \"react\"\nimport {connect} from 'react-redux';\nimport * as actions from \"../../redux/actions/actions\"\nimport UserList from \"./UserList\"\nimport {withRouter} from 'react-router-dom';\nimport InfiniteScroll from 'react-infinite-scroller';\nconst WithRouterList = withRouter(UserList);\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {page:1};\n  }\n  componentDidMount() {\n    this.props.clear();\n    this.props.getList(\"\",\"\",\"\",1);\n  }\n  \n  render() {\n    this.props.getList(\"\",\"\",\"\",this.state.page);\n    return (\n      <InfiniteScroll\n        pageStart={0}\n        loadMore={() => {this.setState({page:this.state.page + 1})}}\n        hasMore={true || false}\n        loader={<div className=\"loader\" key={0}>Loading ...</div>}>\n        <WithRouterList\n          userList={this.props.userList}\n          getListOne={this.props.getListOne}\n          getDS={this.props.getDS}\n          deleteOneUser={this.props.deleteOneUser}\n          getOneUser={this.props.getOneUser}\n        />\n      </InfiniteScroll>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    userList: state.userListReducer\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getList: (search,sortArea,sortFunc,page) => {\n      dispatch(actions.getList(search,sortArea,sortFunc,page));\n    },\n    getListOne: (Id) => {\n      dispatch(actions.getListOne(Id));\n    },\n    getDS: (OfficerId) => {\n      dispatch(actions.getDS(OfficerId));\n    },\n    deleteOneUser: (user) => {\n      dispatch(actions.deleteOneUser(user));\n    },\n    clear: () => {\n      dispatch(actions.clear());\n    },\n    getOneUser: (id,history) => {\n      dispatch(actions.getOneUser(id,history))\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);"]},"metadata":{},"sourceType":"module"}