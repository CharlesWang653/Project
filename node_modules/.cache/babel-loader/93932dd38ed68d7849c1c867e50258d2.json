{"ast":null,"code":"const axios = require('axios');\n\nexport const userListRequestStart = () => {\n  return {\n    type: \"GET_LIST_START\"\n  };\n};\nexport const userListGetSuccess = res => {\n  return {\n    type: \"GET_LIST_SUCCESS\",\n    data: res\n  };\n};\nexport const userListGetFail = err => {\n  return {\n    type: \"GET_LIST_FAIL\",\n    err: err\n  };\n};\nexport const clear = () => {\n  return {\n    type: \"CLEAR\"\n  };\n};\nexport const userClear = () => {\n  return {\n    type: \"USER_CLEAR\"\n  };\n}; //sigle user\n\nexport const userRequestStart = () => {\n  return {\n    type: \"USER_START\"\n  };\n};\nexport const userGetSuccess = res => {\n  return {\n    type: \"GET_USER_SUCCESS\",\n    data: res\n  };\n};\nexport const userRequestFail = err => {\n  return {\n    type: \"USER_FAIL\",\n    err: err\n  };\n};\nexport const getList = (search, sortArea, sortFunc, page) => {\n  return (dispatch, getState) => {\n    dispatch(userListRequestStart());\n\n    if (sortArea !== \"\" && sortFunc !== \"\") {\n      axios.get(\"http://localhost:8888/api/users?search=\".concat(search, \"&sortArea=\").concat(sortArea, \"&sortFunc=\").concat(sortFunc, \"&page=\").concat(page)).then(res => {\n        dispatch(userListGetSuccess(res.data));\n      }).catch(error => {\n        dispatch(userListGetFail(error));\n      });\n    } else {\n      axios.get(\"http://localhost:8888/api/users?search=\".concat(search, \"&page=\").concat(page)).then(res => {\n        dispatch(userListGetSuccess(res.data));\n      }).catch(error => {\n        dispatch(userListGetFail(error));\n      });\n    }\n  };\n};\nexport const getDS = officerId => {\n  return (dispatch, getState) => {\n    dispatch(userListRequestStart());\n    axios.get(\"http://localhost:8888/api/users/\".concat(officerId, \"/DS\")).then(res => {\n      dispatch(userListGetSuccess(res.data));\n    }).catch(error => {\n      dispatch(userListGetFail(error));\n    });\n  };\n};\nexport const getListOne = Id => {\n  return (dispatch, getState) => {\n    dispatch(userListRequestStart());\n    axios.get(\"http://localhost:8888/api/users/\".concat(Id)).then(res => {\n      dispatch(userListGetSuccess([res.data]));\n    }).catch(error => {\n      dispatch(userListGetFail(error));\n    });\n  };\n};\nexport const getOneUser = id => {\n  return (dispatch, getState) => {\n    dispatch(userRequestStart());\n    axios.get(\"http://localhost:8888/api/users/\".concat(id)).then(res => {\n      dispatch(userGetSuccess(res.data));\n      console.log(\"id\" + id);\n    }).catch(error => {\n      dispatch(userRequestFail(error));\n    });\n  };\n};","map":{"version":3,"sources":["/Users/charleswang/Desktop/coding learning/web/projects/project2/src/client/redux/actions/actions.js"],"names":["axios","require","userListRequestStart","type","userListGetSuccess","res","data","userListGetFail","err","clear","userClear","userRequestStart","userGetSuccess","userRequestFail","getList","search","sortArea","sortFunc","page","dispatch","getState","get","then","catch","error","getDS","officerId","getListOne","Id","getOneUser","id","console","log"],"mappings":"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","sourcesContent":["const axios = require('axios');\nexport const userListRequestStart = () => {\n  return {\n    type: \"GET_LIST_START\"\n  }\n}\nexport const userListGetSuccess = (res) => {\n  return {\n    type: \"GET_LIST_SUCCESS\",\n    data: res\n  }\n}\nexport const userListGetFail = (err) => {\n  return {\n    type: \"GET_LIST_FAIL\",\n    err: err\n  }\n}\nexport const clear = () => {\n  return {\n    type: \"CLEAR\"\n  }\n}\nexport const userClear = () => {\n  return {\n    type: \"USER_CLEAR\"\n  }\n}\n\n//sigle user\nexport const userRequestStart = () => {\n  return {\n    type: \"USER_START\"\n  }\n}\nexport const userGetSuccess = (res) => {\n  return {\n    type: \"GET_USER_SUCCESS\",\n    data: res\n  }\n}\nexport const userRequestFail = (err) => {\n  return {\n    type: \"USER_FAIL\",\n    err: err\n  }\n}\n\nexport const getList = (search,sortArea,sortFunc,page) => {\n  return (dispatch, getState) => {\n    dispatch(userListRequestStart());\n    if(sortArea !== \"\" && sortFunc !== \"\"){\n      axios\n      .get(`http://localhost:8888/api/users?search=${search}&sortArea=${sortArea}&sortFunc=${sortFunc}&page=${page}`)\n      .then(res => {\n        dispatch(userListGetSuccess(res.data));\n      })\n      .catch(error => {\n        dispatch(userListGetFail(error));\n      });\n    }else{\n      axios\n      .get(`http://localhost:8888/api/users?search=${search}&page=${page}`)\n      .then(res => {\n        dispatch(userListGetSuccess(res.data));\n      })\n      .catch(error => {\n        dispatch(userListGetFail(error));\n      });\n    }\n  }\n}\nexport const getDS = (officerId) => {\n  return (dispatch, getState) => {\n    dispatch(userListRequestStart());\n    axios\n      .get(`http://localhost:8888/api/users/${officerId}/DS`)\n      .then(res => {\n        dispatch(userListGetSuccess(res.data));\n      })\n      .catch(error => {\n        dispatch(userListGetFail(error));\n      });\n  }\n}\nexport const getListOne = (Id) => {\n  return (dispatch, getState) => {\n    dispatch(userListRequestStart());\n    axios\n      .get(`http://localhost:8888/api/users/${Id}`)\n      .then(res => {\n        dispatch(userListGetSuccess([res.data]));\n      })\n      .catch(error => {\n        dispatch(userListGetFail(error));\n      });\n  }\n}\nexport const getOneUser = (id) => {\n  return (dispatch, getState) => {\n    dispatch(userRequestStart());\n    axios\n      .get(`http://localhost:8888/api/users/${id}`)\n      .then(res => {\n        dispatch(userGetSuccess(res.data));\n        console.log(\"id\"+id);\n      })\n      .catch(error => {\n        dispatch(userRequestFail(error));\n      });\n  }\n}"]},"metadata":{},"sourceType":"module"}