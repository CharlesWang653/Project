{"ast":null,"code":"var _jsxFileName = \"/Users/charleswang/Desktop/coding learning/web/projects/project2/src/client/react/components/Home.js\";\nimport React from \"react\";\nimport { connect } from 'react-redux';\nimport * as actions from \"../../redux/actions/actions\";\nimport UserList from \"./UserList\";\nimport { withRouter } from 'react-router-dom';\nconst WithRouterList = withRouter(UserList);\nvar page = 1,\n    number = 0;\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.loadMore = () => {\n      number = this.props.allList.data.length;\n      console.log(number, page);\n\n      if (page * 4 < number) {\n        page = page + 1;\n        this.props.getList(\"\", \"\", \"\", page);\n        console.log(page + \"in mount\");\n      }\n    };\n\n    this.handleSearch = e => {\n      this.setState({\n        search: e.target.value\n      });\n    };\n\n    this.state = {\n      search: \"\"\n    };\n  }\n\n  componentDidMount() {\n    this.refs.myscroll.addEventListener(\"scroll\", () => {\n      if (this.refs.myscroll.scrollTop + this.refs.myscroll.clientHeight >= this.refs.myscroll.scrollHeight) {\n        this.loadMore();\n      }\n    });\n    this.props.getAllList();\n    this.props.clear();\n    this.props.getList(\"\", \"\", \"\", 1);\n  }\n\n  render() {\n    console.log(number);\n    return React.createElement(\"div\", {\n      className: \"App\",\n      ref: \"myscroll\",\n      style: {\n        height: \"200px\",\n        overflow: \"auto\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.search,\n      onChange: this.handleSearch,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: () => this.props.getList(this.state.search, \"\", \"\", page),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"search\"), React.createElement(\"button\", {\n      onClick: () => {\n        this.props.getList(\"\", \"\", \"\", 1);\n        page = 1;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"reset\"), React.createElement(WithRouterList, {\n      search: this.state.search,\n      page: page,\n      userList: this.props.userList,\n      getListOne: this.props.getListOne,\n      getDS: this.props.getDS,\n      deleteOneUser: this.props.deleteOneUser,\n      getOneUser: this.props.getOneUser,\n      getList: this.props.getList,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    userList: state.userListReducer,\n    allList: state.nameIdReducer\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getList: (search, sortArea, sortFunc, page) => {\n      dispatch(actions.getList(search, sortArea, sortFunc, page));\n    },\n    getListOne: Id => {\n      dispatch(actions.getListOne(Id));\n    },\n    getDS: OfficerId => {\n      dispatch(actions.getDS(OfficerId));\n    },\n    deleteOneUser: user => {\n      dispatch(actions.deleteOneUser(user));\n    },\n    clear: () => {\n      dispatch(actions.clear());\n    },\n    getOneUser: (id, history) => {\n      dispatch(actions.getOneUser(id, history));\n    },\n    getAllList: () => {\n      dispatch(actions.getAllList());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);","map":{"version":3,"sources":["/Users/charleswang/Desktop/coding learning/web/projects/project2/src/client/react/components/Home.js"],"names":["React","connect","actions","UserList","withRouter","WithRouterList","page","number","Home","Component","constructor","props","loadMore","allList","data","length","console","log","getList","handleSearch","e","setState","search","target","value","state","componentDidMount","refs","myscroll","addEventListener","scrollTop","clientHeight","scrollHeight","getAllList","clear","render","height","overflow","userList","getListOne","getDS","deleteOneUser","getOneUser","mapStateToProps","userListReducer","nameIdReducer","mapDispatchToProps","dispatch","sortArea","sortFunc","Id","OfficerId","user","id","history"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAO,KAAKC,OAAZ,MAAyB,6BAAzB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAAQC,UAAR,QAAyB,kBAAzB;AACA,MAAMC,cAAc,GAAGD,UAAU,CAACD,QAAD,CAAjC;AACA,IAAIG,IAAI,GAAG,CAAX;AAAA,IAAcC,MAAM,GAAG,CAAvB;;AACA,MAAMC,IAAN,SAAmBR,KAAK,CAACS,SAAzB,CAAmC;AACjCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAiBnBC,QAjBmB,GAiBR,MAAM;AACfL,MAAAA,MAAM,GAAG,KAAKI,KAAL,CAAWE,OAAX,CAAmBC,IAAnB,CAAwBC,MAAjC;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYV,MAAZ,EAAmBD,IAAnB;;AACA,UAAGA,IAAI,GAAG,CAAP,GAAWC,MAAd,EAAqB;AACnBD,QAAAA,IAAI,GAAGA,IAAI,GAAC,CAAZ;AACA,aAAKK,KAAL,CAAWO,OAAX,CAAmB,EAAnB,EAAsB,EAAtB,EAAyB,EAAzB,EAA4BZ,IAA5B;AACAU,QAAAA,OAAO,CAACC,GAAR,CAAYX,IAAI,GAAC,UAAjB;AACD;AACF,KAzBkB;;AAAA,SA0BnBa,YA1BmB,GA0BHC,CAAD,IAAO;AACpB,WAAKC,QAAL,CAAc;AAACC,QAAAA,MAAM,EAACF,CAAC,CAACG,MAAF,CAASC;AAAjB,OAAd;AACD,KA5BkB;;AAEjB,SAAKC,KAAL,GAAa;AAACH,MAAAA,MAAM,EAAC;AAAR,KAAb;AACD;;AACDI,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,IAAL,CAAUC,QAAV,CAAmBC,gBAAnB,CAAoC,QAApC,EAA8C,MAAM;AAClD,UACE,KAAKF,IAAL,CAAUC,QAAV,CAAmBE,SAAnB,GAA+B,KAAKH,IAAL,CAAUC,QAAV,CAAmBG,YAAlD,IACA,KAAKJ,IAAL,CAAUC,QAAV,CAAmBI,YAFrB,EAGE;AACA,aAAKpB,QAAL;AACD;AACF,KAPD;AAQA,SAAKD,KAAL,CAAWsB,UAAX;AACA,SAAKtB,KAAL,CAAWuB,KAAX;AACA,SAAKvB,KAAL,CAAWO,OAAX,CAAmB,EAAnB,EAAsB,EAAtB,EAAyB,EAAzB,EAA4B,CAA5B;AACD;;AAaDiB,EAAAA,MAAM,GAAG;AACPnB,IAAAA,OAAO,CAACC,GAAR,CAAYV,MAAZ;AACA,WACE;AACE,MAAA,SAAS,EAAC,KADZ;AAEE,MAAA,GAAG,EAAC,UAFN;AAGE,MAAA,KAAK,EAAE;AAAE6B,QAAAA,MAAM,EAAE,OAAV;AAAmBC,QAAAA,QAAQ,EAAE;AAA7B,OAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,KAAK,EAAE,KAAKZ,KAAL,CAAWH,MAArC;AAA6C,MAAA,QAAQ,EAAE,KAAKH,YAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,EAME;AAAQ,MAAA,OAAO,EAAE,MAAM,KAAKR,KAAL,CAAWO,OAAX,CAAmB,KAAKO,KAAL,CAAWH,MAA9B,EAAqC,EAArC,EAAwC,EAAxC,EAA2ChB,IAA3C,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANF,EAOE;AAAQ,MAAA,OAAO,EAAE,MAAM;AAAC,aAAKK,KAAL,CAAWO,OAAX,CAAmB,EAAnB,EAAsB,EAAtB,EAAyB,EAAzB,EAA4B,CAA5B;AAA+BZ,QAAAA,IAAI,GAAC,CAAL;AAAO,OAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAPF,EAQE,oBAAC,cAAD;AACE,MAAA,MAAM,EAAE,KAAKmB,KAAL,CAAWH,MADrB;AAEE,MAAA,IAAI,EAAEhB,IAFR;AAGE,MAAA,QAAQ,EAAE,KAAKK,KAAL,CAAW2B,QAHvB;AAIE,MAAA,UAAU,EAAE,KAAK3B,KAAL,CAAW4B,UAJzB;AAKE,MAAA,KAAK,EAAE,KAAK5B,KAAL,CAAW6B,KALpB;AAME,MAAA,aAAa,EAAE,KAAK7B,KAAL,CAAW8B,aAN5B;AAOE,MAAA,UAAU,EAAE,KAAK9B,KAAL,CAAW+B,UAPzB;AAQE,MAAA,OAAO,EAAE,KAAK/B,KAAL,CAAWO,OARtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,CADF;AAqBD;;AArDgC;;AAuDnC,MAAMyB,eAAe,GAAGlB,KAAK,IAAI;AAC/B,SAAO;AACLa,IAAAA,QAAQ,EAAEb,KAAK,CAACmB,eADX;AAEL/B,IAAAA,OAAO,EAAEY,KAAK,CAACoB;AAFV,GAAP;AAID,CALD;;AAOA,MAAMC,kBAAkB,GAAGC,QAAQ,IAAI;AACrC,SAAO;AACL7B,IAAAA,OAAO,EAAE,CAACI,MAAD,EAAQ0B,QAAR,EAAiBC,QAAjB,EAA0B3C,IAA1B,KAAmC;AAC1CyC,MAAAA,QAAQ,CAAC7C,OAAO,CAACgB,OAAR,CAAgBI,MAAhB,EAAuB0B,QAAvB,EAAgCC,QAAhC,EAAyC3C,IAAzC,CAAD,CAAR;AACD,KAHI;AAILiC,IAAAA,UAAU,EAAGW,EAAD,IAAQ;AAClBH,MAAAA,QAAQ,CAAC7C,OAAO,CAACqC,UAAR,CAAmBW,EAAnB,CAAD,CAAR;AACD,KANI;AAOLV,IAAAA,KAAK,EAAGW,SAAD,IAAe;AACpBJ,MAAAA,QAAQ,CAAC7C,OAAO,CAACsC,KAAR,CAAcW,SAAd,CAAD,CAAR;AACD,KATI;AAULV,IAAAA,aAAa,EAAGW,IAAD,IAAU;AACvBL,MAAAA,QAAQ,CAAC7C,OAAO,CAACuC,aAAR,CAAsBW,IAAtB,CAAD,CAAR;AACD,KAZI;AAaLlB,IAAAA,KAAK,EAAE,MAAM;AACXa,MAAAA,QAAQ,CAAC7C,OAAO,CAACgC,KAAR,EAAD,CAAR;AACD,KAfI;AAgBLQ,IAAAA,UAAU,EAAE,CAACW,EAAD,EAAIC,OAAJ,KAAgB;AAC1BP,MAAAA,QAAQ,CAAC7C,OAAO,CAACwC,UAAR,CAAmBW,EAAnB,EAAsBC,OAAtB,CAAD,CAAR;AACD,KAlBI;AAmBLrB,IAAAA,UAAU,EAAE,MAAM;AAChBc,MAAAA,QAAQ,CAAC7C,OAAO,CAAC+B,UAAR,EAAD,CAAR;AACD;AArBI,GAAP;AAuBD,CAxBD;;AA0BA,eAAehC,OAAO,CAAC0C,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CtC,IAA7C,CAAf","sourcesContent":["import React from \"react\"\nimport {connect} from 'react-redux';\nimport * as actions from \"../../redux/actions/actions\"\nimport UserList from \"./UserList\"\nimport {withRouter} from 'react-router-dom';\nconst WithRouterList = withRouter(UserList);\nvar page = 1, number = 0;\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {search:\"\"};\n  }\n  componentDidMount() {\n    this.refs.myscroll.addEventListener(\"scroll\", () => {\n      if (\n        this.refs.myscroll.scrollTop + this.refs.myscroll.clientHeight >=\n        this.refs.myscroll.scrollHeight\n      ) {\n        this.loadMore();\n      }\n    });\n    this.props.getAllList();\n    this.props.clear();\n    this.props.getList(\"\",\"\",\"\",1);\n  }\n  loadMore = () => {\n    number = this.props.allList.data.length;\n    console.log(number,page);\n    if(page * 4 < number){\n      page = page+1;\n      this.props.getList(\"\",\"\",\"\",page);\n      console.log(page+\"in mount\");\n    }\n  }\n  handleSearch = (e) => {\n    this.setState({search:e.target.value});\n  }\n  render() {\n    console.log(number);\n    return (\n      <div\n        className=\"App\"\n        ref=\"myscroll\"\n        style={{ height: \"200px\", overflow: \"auto\" }}\n      >\n        <input type=\"text\" value={this.state.search} onChange={this.handleSearch}></input>\n        <button onClick={() => this.props.getList(this.state.search,\"\",\"\",page)}>search</button>\n        <button onClick={() => {this.props.getList(\"\",\"\",\"\",1);page=1}}>reset</button>\n        <WithRouterList\n          search={this.state.search}\n          page={page}\n          userList={this.props.userList}\n          getListOne={this.props.getListOne}\n          getDS={this.props.getDS}\n          deleteOneUser={this.props.deleteOneUser}\n          getOneUser={this.props.getOneUser}\n          getList={this.props.getList}\n        />\n      </div>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    userList: state.userListReducer,\n    allList: state.nameIdReducer\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getList: (search,sortArea,sortFunc,page) => {\n      dispatch(actions.getList(search,sortArea,sortFunc,page));\n    },\n    getListOne: (Id) => {\n      dispatch(actions.getListOne(Id));\n    },\n    getDS: (OfficerId) => {\n      dispatch(actions.getDS(OfficerId));\n    },\n    deleteOneUser: (user) => {\n      dispatch(actions.deleteOneUser(user));\n    },\n    clear: () => {\n      dispatch(actions.clear());\n    },\n    getOneUser: (id,history) => {\n      dispatch(actions.getOneUser(id,history))\n    },\n    getAllList: () => {\n      dispatch(actions.getAllList());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);"]},"metadata":{},"sourceType":"module"}