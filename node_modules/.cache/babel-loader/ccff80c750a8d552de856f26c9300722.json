{"ast":null,"code":"var _jsxFileName = \"/Users/charleswang/Desktop/coding learning/web/projects/project2/src/client/react/components/Home.js\";\nimport React from \"react\";\nimport { connect } from 'react-redux';\nimport * as actions from \"../../redux/actions/actions\";\nimport UserList from \"./UserList\";\nimport { withRouter } from 'react-router-dom';\nimport InfiniteScroll from 'react-infinite-scroller';\nconst WithRouterList = withRouter(UserList);\nvar page = 1;\nconst style = {\n  height: \"200px\",\n  overflow: \"auto\"\n};\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      page: 1\n    };\n  }\n\n  componentDidMount() {\n    this.props.clear();\n    this.props.getList(\"\", \"\", \"\", page);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      style: style,\n      ref: ref => this.scrollParentRef = ref,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(InfiniteScroll, {\n      pageStart: 0,\n      loadMore: () => {\n        page++;\n        console.log(page);\n      },\n      hasMore: true || false,\n      loader: React.createElement(\"div\", {\n        className: \"loader\",\n        key: 0,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, \"Loading ...\"),\n      useWindow: false,\n      getScrollParent: () => this.scrollParentRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(WithRouterList, {\n      userList: this.props.userList,\n      getListOne: this.props.getListOne,\n      getDS: this.props.getDS,\n      deleteOneUser: this.props.deleteOneUser,\n      getOneUser: this.props.getOneUser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    userList: state.userListReducer\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getList: (search, sortArea, sortFunc, page) => {\n      dispatch(actions.getList(search, sortArea, sortFunc, page));\n    },\n    getListOne: Id => {\n      dispatch(actions.getListOne(Id));\n    },\n    getDS: OfficerId => {\n      dispatch(actions.getDS(OfficerId));\n    },\n    deleteOneUser: user => {\n      dispatch(actions.deleteOneUser(user));\n    },\n    clear: () => {\n      dispatch(actions.clear());\n    },\n    getOneUser: (id, history) => {\n      dispatch(actions.getOneUser(id, history));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);","map":{"version":3,"sources":["/Users/charleswang/Desktop/coding learning/web/projects/project2/src/client/react/components/Home.js"],"names":["React","connect","actions","UserList","withRouter","InfiniteScroll","WithRouterList","page","style","height","overflow","Home","Component","constructor","props","state","componentDidMount","clear","getList","render","ref","scrollParentRef","console","log","userList","getListOne","getDS","deleteOneUser","getOneUser","mapStateToProps","userListReducer","mapDispatchToProps","dispatch","search","sortArea","sortFunc","Id","OfficerId","user","id","history"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport {connect} from 'react-redux';\nimport * as actions from \"../../redux/actions/actions\"\nimport UserList from \"./UserList\"\nimport {withRouter} from 'react-router-dom';\nimport InfiniteScroll from 'react-infinite-scroller';\nconst WithRouterList = withRouter(UserList);\nvar page = 1;\nconst style = {height:\"200px\",overflow:\"auto\"}\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {page:1};\n  }\n  componentDidMount() {\n    this.props.clear();\n    this.props.getList(\"\",\"\",\"\",page);\n  }\n  \n  render() {\n    return (\n      <div style={style} ref={(ref) => this.scrollParentRef = ref}>\n        <div>\n          <InfiniteScroll\n            pageStart={0}\n            loadMore={() => {page++; console.log(page)}}\n            hasMore={true || false}\n            loader={<div className=\"loader\" key={0}>Loading ...</div>}\n            useWindow={false}\n            getScrollParent={() => this.scrollParentRef}\n            >\n            <WithRouterList\n              userList={this.props.userList}\n              getListOne={this.props.getListOne}\n              getDS={this.props.getDS}\n              deleteOneUser={this.props.deleteOneUser}\n              getOneUser={this.props.getOneUser}\n            />\n          </InfiniteScroll>\n        </div>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    userList: state.userListReducer\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getList: (search,sortArea,sortFunc,page) => {\n      dispatch(actions.getList(search,sortArea,sortFunc,page));\n    },\n    getListOne: (Id) => {\n      dispatch(actions.getListOne(Id));\n    },\n    getDS: (OfficerId) => {\n      dispatch(actions.getDS(OfficerId));\n    },\n    deleteOneUser: (user) => {\n      dispatch(actions.deleteOneUser(user));\n    },\n    clear: () => {\n      dispatch(actions.clear());\n    },\n    getOneUser: (id,history) => {\n      dispatch(actions.getOneUser(id,history))\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);"]},"metadata":{},"sourceType":"module"}