{"ast":null,"code":"var _jsxFileName = \"/Users/charleswang/Desktop/coding learning/web/projects/project2/src/client/react/components/Home.js\";\nimport React from \"react\";\nimport { connect } from 'react-redux';\nimport * as actions from \"../../redux/actions/actions\";\nimport UserList from \"./UserList\";\nimport { withRouter } from 'react-router-dom';\nconst WithRouterList = withRouter(UserList);\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  componentDidMount() {\n    this.props.clear();\n    this.props.getList(\"\", \"\", \"\", 4);\n  }\n\n  render() {\n    return React.createElement(WithRouterList, {\n      userList: this.props.userList,\n      getListOne: this.props.getListOne,\n      getDS: this.props.getDS,\n      deleteOneUser: this.props.deleteOneUser,\n      getOneUser: this.props.getOneUser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    });\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    userList: state.userListReducer\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getList: (search, sortArea, sortFunc, page) => {\n      dispatch(actions.getList(search, sortArea, sortFunc, page));\n    },\n    getListOne: Id => {\n      dispatch(actions.getListOne(Id));\n    },\n    getDS: OfficerId => {\n      dispatch(actions.getDS(OfficerId));\n    },\n    deleteOneUser: user => {\n      dispatch(actions.deleteOneUser(user));\n    },\n    clear: () => {\n      dispatch(actions.clear());\n    },\n    getOneUser: (id, history) => {\n      dispatch(actions.getOneUser(id, history));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);","map":{"version":3,"sources":["/Users/charleswang/Desktop/coding learning/web/projects/project2/src/client/react/components/Home.js"],"names":["React","connect","actions","UserList","withRouter","WithRouterList","Home","Component","constructor","props","state","componentDidMount","clear","getList","render","userList","getListOne","getDS","deleteOneUser","getOneUser","mapStateToProps","userListReducer","mapDispatchToProps","dispatch","search","sortArea","sortFunc","page","Id","OfficerId","user","id","history"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAO,KAAKC,OAAZ,MAAyB,6BAAzB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAAQC,UAAR,QAAyB,kBAAzB;AACA,MAAMC,cAAc,GAAGD,UAAU,CAACD,QAAD,CAAjC;;AACA,MAAMG,IAAN,SAAmBN,KAAK,CAACO,SAAzB,CAAmC;AACjCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa,EAAb;AACD;;AACDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKF,KAAL,CAAWG,KAAX;AACA,SAAKH,KAAL,CAAWI,OAAX,CAAmB,EAAnB,EAAsB,EAAtB,EAAyB,EAAzB,EAA4B,CAA5B;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,cAAD;AACE,MAAA,QAAQ,EAAE,KAAKL,KAAL,CAAWM,QADvB;AAEE,MAAA,UAAU,EAAE,KAAKN,KAAL,CAAWO,UAFzB;AAGE,MAAA,KAAK,EAAE,KAAKP,KAAL,CAAWQ,KAHpB;AAIE,MAAA,aAAa,EAAE,KAAKR,KAAL,CAAWS,aAJ5B;AAKE,MAAA,UAAU,EAAE,KAAKT,KAAL,CAAWU,UALzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AASD;;AApBgC;;AAsBnC,MAAMC,eAAe,GAAGV,KAAK,IAAI;AAC/B,SAAO;AACLK,IAAAA,QAAQ,EAAEL,KAAK,CAACW;AADX,GAAP;AAGD,CAJD;;AAMA,MAAMC,kBAAkB,GAAGC,QAAQ,IAAI;AACrC,SAAO;AACLV,IAAAA,OAAO,EAAE,CAACW,MAAD,EAAQC,QAAR,EAAiBC,QAAjB,EAA0BC,IAA1B,KAAmC;AAC1CJ,MAAAA,QAAQ,CAACrB,OAAO,CAACW,OAAR,CAAgBW,MAAhB,EAAuBC,QAAvB,EAAgCC,QAAhC,EAAyCC,IAAzC,CAAD,CAAR;AACD,KAHI;AAILX,IAAAA,UAAU,EAAGY,EAAD,IAAQ;AAClBL,MAAAA,QAAQ,CAACrB,OAAO,CAACc,UAAR,CAAmBY,EAAnB,CAAD,CAAR;AACD,KANI;AAOLX,IAAAA,KAAK,EAAGY,SAAD,IAAe;AACpBN,MAAAA,QAAQ,CAACrB,OAAO,CAACe,KAAR,CAAcY,SAAd,CAAD,CAAR;AACD,KATI;AAULX,IAAAA,aAAa,EAAGY,IAAD,IAAU;AACvBP,MAAAA,QAAQ,CAACrB,OAAO,CAACgB,aAAR,CAAsBY,IAAtB,CAAD,CAAR;AACD,KAZI;AAaLlB,IAAAA,KAAK,EAAE,MAAM;AACXW,MAAAA,QAAQ,CAACrB,OAAO,CAACU,KAAR,EAAD,CAAR;AACD,KAfI;AAgBLO,IAAAA,UAAU,EAAE,CAACY,EAAD,EAAIC,OAAJ,KAAgB;AAC1BT,MAAAA,QAAQ,CAACrB,OAAO,CAACiB,UAAR,CAAmBY,EAAnB,EAAsBC,OAAtB,CAAD,CAAR;AACD;AAlBI,GAAP;AAoBD,CArBD;;AAuBA,eAAe/B,OAAO,CAACmB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6ChB,IAA7C,CAAf","sourcesContent":["import React from \"react\"\nimport {connect} from 'react-redux';\nimport * as actions from \"../../redux/actions/actions\"\nimport UserList from \"./UserList\"\nimport {withRouter} from 'react-router-dom';\nconst WithRouterList = withRouter(UserList);\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  componentDidMount() {\n    this.props.clear();\n    this.props.getList(\"\",\"\",\"\",4);\n  }\n  \n  render() {\n    return (\n      <WithRouterList\n        userList={this.props.userList}\n        getListOne={this.props.getListOne}\n        getDS={this.props.getDS}\n        deleteOneUser={this.props.deleteOneUser}\n        getOneUser={this.props.getOneUser}\n      />\n    );\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    userList: state.userListReducer\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getList: (search,sortArea,sortFunc,page) => {\n      dispatch(actions.getList(search,sortArea,sortFunc,page));\n    },\n    getListOne: (Id) => {\n      dispatch(actions.getListOne(Id));\n    },\n    getDS: (OfficerId) => {\n      dispatch(actions.getDS(OfficerId));\n    },\n    deleteOneUser: (user) => {\n      dispatch(actions.deleteOneUser(user));\n    },\n    clear: () => {\n      dispatch(actions.clear());\n    },\n    getOneUser: (id,history) => {\n      dispatch(actions.getOneUser(id,history))\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);"]},"metadata":{},"sourceType":"module"}