{"ast":null,"code":"import _defineProperty from \"/Users/charleswang/Desktop/coding learning/web/projects/project2/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nconst axios = require('axios');\n\nexport const userListRequestStart = () => {\n  return {\n    type: \"GET_LIST_START\"\n  };\n};\nexport const userListGetSuccess = res => {\n  return {\n    type: \"GET_LIST_SUCCESS\",\n    data: res\n  };\n};\nexport const userListGetFail = err => {\n  return {\n    type: \"GET_LIST_FAIL\",\n    err: err\n  };\n};\nexport const clear = () => {\n  return {\n    type: \"CLEAR\"\n  };\n};\nexport const userClear = () => {\n  return {\n    type: \"USER_CLEAR\"\n  };\n}; //all list\n\nexport const getAllStart = () => {\n  return {\n    type: \"GET_ALL_LIST_START\"\n  };\n};\nexport const getAllSuccess = res => {\n  return {\n    type: \"GET_ALL_LIST_SUCCESS\",\n    data: res\n  };\n};\nexport const getAllFail = err => {\n  return {\n    type: \"GET_ALL_LIST_FAIL\",\n    err: err\n  };\n}; //sigle user\n\nexport const userRequestStart = () => {\n  return {\n    type: \"USER_START\"\n  };\n};\nexport const userGetSuccess = res => {\n  return {\n    type: \"GET_USER_SUCCESS\",\n    data: res\n  };\n};\nexport const userRequestFail = err => {\n  return {\n    type: \"USER_FAIL\",\n    err: err\n  };\n};\nexport const getAllList = () => {\n  return (dispatch, getState) => {\n    dispatch(getAllStart());\n    const arr = [];\n    axios.get(\"http://localhost:8888/api/users\").then(res => {\n      res.data.forEach(user => {\n        arr.push({\n          name: user.Name,\n          id: user._id\n        });\n      });\n      dispatch(getAllSuccess(arr));\n    }).catch(error => {\n      dispatch(getAllFail(error));\n    });\n  };\n};\nexport const getList = (search, sortArea, sortFunc, page) => {\n  return (dispatch, getState) => {\n    let newArr = [];\n    dispatch(userListRequestStart());\n\n    if (sortArea !== \"\" && sortFunc !== \"\") {\n      axios.get(\"http://localhost:8888/api/users?search=\".concat(search, \"&sortArea=\").concat(sortArea, \"&sortFunc=\").concat(sortFunc, \"&page=\").concat(page)).then(res => {\n        for (let user of res.data) {\n          axios.get(\"http://localhost:8888/api/users/\".concat(user.Superior)).then(newRes => {\n            if (user.Superior !== \"\") {\n              user = _objectSpread({}, user, {\n                SuperiorName: newRes.data.Name\n              }); // console.log(user);\n\n              newArr.push(user);\n            } else {\n              // console.log(user);\n              newArr.push(user);\n            }\n\n            if (res.data.length === newArr.length) {\n              dispatch(userListGetSuccess(newArr));\n            }\n          });\n        }\n      }).catch(error => {\n        dispatch(userListGetFail(error));\n      });\n    } else {\n      axios.get(\"http://localhost:8888/api/users?search=\".concat(search, \"&page=\").concat(page)).then(res => {\n        for (let user of res.data) {\n          axios.get(\"http://localhost:8888/api/users/\".concat(user.Superior)).then(newRes => {\n            if (user.Superior !== \"\") {\n              user = _objectSpread({}, user, {\n                SuperiorName: newRes.data.Name\n              }); // console.log(user);\n\n              newArr.push(user);\n            } else {\n              // console.log(user);\n              newArr.push(user);\n            }\n\n            if (res.data.length === newArr.length) {\n              dispatch(userListGetSuccess(newArr));\n            }\n          });\n        }\n      }).catch(error => {\n        dispatch(userListGetFail(error));\n      });\n    }\n  };\n};\nexport const getDS = officerId => {\n  return (dispatch, getState) => {\n    let newArr = [];\n    dispatch(userListRequestStart());\n    axios.get(\"http://localhost:8888/api/users/\".concat(officerId, \"/DS\")).then(res => {\n      for (let user of res.data) {\n        axios.get(\"http://localhost:8888/api/users/\".concat(user.Superior)).then(newRes => {\n          if (user.Superior !== \"\") {\n            user = _objectSpread({}, user, {\n              SuperiorName: newRes.data.Name\n            }); // console.log(user);\n\n            newArr.push(user);\n          } else {\n            // console.log(user);\n            newArr.push(user);\n          }\n\n          if (res.data.length === newArr.length) {\n            dispatch(userListGetSuccess(newArr));\n          }\n        });\n      }\n    }).catch(error => {\n      dispatch(userListGetFail(error));\n    });\n  };\n};\nexport const getListOne = Id => {\n  return (dispatch, getState) => {\n    if (Id !== \"\") {\n      dispatch(userListRequestStart());\n      let newArr = [];\n      axios.get(\"http://localhost:8888/api/users/\".concat(Id)).then(res => {\n        console.log(res.data);\n        axios.get(\"http://localhost:8888/api/users/\".concat(res.data.Superior)).then(newRes => {\n          if (res.data.Superior !== \"\") {\n            res.data = _objectSpread({}, res.data, {\n              SuperiorName: newRes.data.Name\n            }); // console.log(user);\n\n            newArr.push(res.data);\n          } else {\n            // console.log(user);\n            newArr.push(res.data);\n          }\n\n          dispatch(userListGetSuccess(newArr));\n        });\n      }).catch(error => {\n        dispatch(userListGetFail(error));\n      });\n    }\n  };\n};\nexport const createOne = (user, history) => {\n  return (dispatch, getState) => {\n    dispatch(userRequestStart());\n    axios.post(\"http://localhost:8888/api/users\", user).then(res => {\n      if (user.Superior !== \"\") {\n        axios.put(\"http://localhost:8888/api/users/\".concat(user.Superior, \"/DS\"), {\n          id: res.data\n        }).then(history.push('/'));\n      } else {\n        history.push('/');\n      }\n    }).catch(error => {\n      dispatch(userListGetFail(error));\n    });\n  };\n};\nexport const deleteOneUser = user => {\n  return (dispatch, getState) => {\n    dispatch(userRequestStart());\n\n    if (user.DS.length !== 0) {\n      user.DS.forEach(DSId => {\n        axios.delete(\"http://localhost:8888/api/users/\".concat(DSId, \"/superior\"));\n      });\n    }\n\n    axios.delete(\"http://localhost:8888/api/users/\".concat(user._id)).then(res => {\n      if (user.Superior !== \"\") {\n        axios.delete(\"http://localhost:8888/api/users/\".concat(user.Superior, \"/DS/\").concat(user._id)).then(res => {\n          dispatch(getList(\"\", \"\", \"\", 4));\n        });\n      }\n    }).then(res => {\n      dispatch(getList(\"\", \"\", \"\", 4));\n    }).catch(error => {\n      dispatch(userRequestFail(error));\n    });\n  };\n};\nexport const updateOne = (user, oldSuperior, newSuperior, history) => {\n  return (dispatch, getState) => {\n    if (oldSuperior !== newSuperior) {\n      if (oldSuperior !== \"\" && newSuperior !== \"\") {\n        axios.all([axios.put(\"http://localhost:8888/api/users/\".concat(user._id), user), axios.put(\"http://localhost:8888/api/users/\".concat(newSuperior, \"/DS\"), {\n          id: user._id\n        }), axios.delete(\"http://localhost:8888/api/users/\".concat(oldSuperior, \"/DS/\").concat(user._id))]).then(() => history.goBack());\n      } else if (oldSuperior !== \"\" && newSuperior === \"\") {\n        axios.all([axios.put(\"http://localhost:8888/api/users/\".concat(user._id), user), axios.delete(\"http://localhost:8888/api/users/\".concat(oldSuperior, \"/DS/\").concat(user._id))]).then(history.goBack());\n      } else if (oldSuperior === \"\" && newSuperior !== \"\") {\n        axios.all([axios.put(\"http://localhost:8888/api/users/\".concat(user._id), user), axios.put(\"http://localhost:8888/api/users/\".concat(newSuperior, \"/DS\"), {\n          id: user._id\n        })]).then(history.goBack());\n      }\n    } else {\n      axios.put(\"http://localhost:8888/api/users/\".concat(user._id), user).then(history.push('/'));\n    }\n  };\n};\nexport const getOneUser = (id, history) => {\n  return (dispatch, getState) => {\n    dispatch(userRequestStart());\n    axios.get(\"http://localhost:8888/api/users/\".concat(id)).then(res => {\n      dispatch(userGetSuccess(res.data));\n    }).then(() => {\n      // console.log(history);\n      history.push(\"/edit/\".concat(id));\n    }).catch(error => {\n      dispatch(userRequestFail(error));\n    });\n  };\n};","map":{"version":3,"sources":["/Users/charleswang/Desktop/coding learning/web/projects/project2/src/client/redux/actions/actions.js"],"names":["axios","require","userListRequestStart","type","userListGetSuccess","res","data","userListGetFail","err","clear","userClear","getAllStart","getAllSuccess","getAllFail","userRequestStart","userGetSuccess","userRequestFail","getAllList","dispatch","getState","arr","get","then","forEach","user","push","name","Name","id","_id","catch","error","getList","search","sortArea","sortFunc","page","newArr","Superior","newRes","SuperiorName","length","getDS","officerId","getListOne","Id","console","log","createOne","history","post","put","deleteOneUser","DS","DSId","delete","updateOne","oldSuperior","newSuperior","all","goBack","getOneUser"],"mappings":"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","sourcesContent":["const axios = require('axios');\nexport const userListRequestStart = () => {\n  return {\n    type: \"GET_LIST_START\"\n  }\n}\nexport const userListGetSuccess = (res) => {\n  return {\n    type: \"GET_LIST_SUCCESS\",\n    data: res\n  }\n}\nexport const userListGetFail = (err) => {\n  return {\n    type: \"GET_LIST_FAIL\",\n    err: err\n  }\n}\nexport const clear = () => {\n  return {\n    type: \"CLEAR\"\n  }\n}\nexport const userClear = () => {\n  return {\n    type: \"USER_CLEAR\"\n  }\n}\n//all list\nexport const getAllStart = () => {\n  return {\n    type: \"GET_ALL_LIST_START\"\n  }\n}\nexport const getAllSuccess = (res) => {\n  return {\n    type: \"GET_ALL_LIST_SUCCESS\",\n    data: res\n  }\n}\nexport const getAllFail = (err) => {\n  return {\n    type: \"GET_ALL_LIST_FAIL\",\n    err: err\n  }\n}\n//sigle user\nexport const userRequestStart = () => {\n  return {\n    type: \"USER_START\"\n  }\n}\nexport const userGetSuccess = (res) => {\n  return {\n    type: \"GET_USER_SUCCESS\",\n    data: res\n  }\n}\nexport const userRequestFail = (err) => {\n  return {\n    type: \"USER_FAIL\",\n    err: err\n  }\n}\nexport const getAllList = () => {\n  return (dispatch, getState) => {\n    dispatch(getAllStart());\n    const arr = [];\n    axios\n      .get(`http://localhost:8888/api/users`)\n      .then(res => {\n        res.data.forEach((user) => {\n          arr.push({name:user.Name, id: user._id});\n        })\n        dispatch(getAllSuccess(arr));\n      })\n      .catch(error => {\n        dispatch(getAllFail(error));\n      });\n  }\n}\nexport const getList = (search,sortArea,sortFunc,page) => {\n  return (dispatch, getState) => {\n    let newArr = [];\n    dispatch(userListRequestStart());\n    if(sortArea !== \"\" && sortFunc !== \"\"){\n      axios\n      .get(`http://localhost:8888/api/users?search=${search}&sortArea=${sortArea}&sortFunc=${sortFunc}&page=${page}`)\n      .then(res => {\n        for(let user of res.data){\n            axios.get(`http://localhost:8888/api/users/${user.Superior}`)\n              .then(newRes => {\n                if(user.Superior !== \"\"){\n                  user = {...user,SuperiorName: newRes.data.Name};\n                  // console.log(user);\n                  newArr.push(user);\n                }else{\n                  // console.log(user);\n                  newArr.push(user);\n                }\n                if (res.data.length === newArr.length) {\n                  dispatch(userListGetSuccess(newArr));\n                }\n              })\n        }\n      })\n      .catch(error => {\n        dispatch(userListGetFail(error));\n      });\n    }else{\n      axios\n      .get(`http://localhost:8888/api/users?search=${search}&page=${page}`)\n      .then(res => {\n        for(let user of res.data){\n            axios.get(`http://localhost:8888/api/users/${user.Superior}`)\n              .then(newRes => {\n                if(user.Superior !== \"\"){\n                  user = {...user,SuperiorName: newRes.data.Name};\n                  // console.log(user);\n                  newArr.push(user);\n                }else{\n                  // console.log(user);\n                  newArr.push(user);\n                }\n                if (res.data.length === newArr.length) {\n                  dispatch(userListGetSuccess(newArr));\n                }\n              })\n        }\n      })\n      .catch(error => {\n        dispatch(userListGetFail(error));\n      });\n    }\n  }\n}\nexport const getDS = (officerId) => {\n  return (dispatch, getState) => {\n    let newArr = [];\n    dispatch(userListRequestStart());\n    axios\n      .get(`http://localhost:8888/api/users/${officerId}/DS`)\n      .then(res => {\n        for(let user of res.data){\n          axios.get(`http://localhost:8888/api/users/${user.Superior}`)\n            .then(newRes => {\n              if(user.Superior !== \"\"){\n                user = {...user,SuperiorName: newRes.data.Name};\n                // console.log(user);\n                newArr.push(user);\n              }else{\n                // console.log(user);\n                newArr.push(user);\n              }\n              if (res.data.length === newArr.length) {\n                dispatch(userListGetSuccess(newArr));\n              }\n            })\n      }\n      })\n      .catch(error => {\n        dispatch(userListGetFail(error));\n      });\n  }\n}\nexport const getListOne = (Id) => {\n    return (dispatch, getState) => {\n      if(Id !== \"\"){\n      dispatch(userListRequestStart());\n      let newArr = [];\n      axios\n        .get(`http://localhost:8888/api/users/${Id}`)\n        .then(res => {\n          console.log(res.data);\n            axios.get(`http://localhost:8888/api/users/${res.data.Superior}`)\n              .then(newRes => {\n                if(res.data.Superior !== \"\"){\n                  res.data = {...res.data,SuperiorName: newRes.data.Name};\n                  // console.log(user);\n                  newArr.push(res.data);\n                }else{\n                  // console.log(user);\n                  newArr.push(res.data);\n                }\n                dispatch(userListGetSuccess(newArr));\n              })\n        })\n        .catch(error => {\n          dispatch(userListGetFail(error));\n        });\n    }\n  }\n}\nexport const createOne = (user,history) => {\n  return (dispatch, getState) => {\n    dispatch(userRequestStart());\n    axios\n      .post(`http://localhost:8888/api/users`, user)\n      .then(res => {\n        if(user.Superior !== \"\"){\n          axios.put(`http://localhost:8888/api/users/${user.Superior}/DS`,{id: res.data})\n            .then(history.push('/'))\n        }else{\n          history.push('/');\n        }\n      })\n      .catch(error => {\n        dispatch(userListGetFail(error));\n      });\n  }\n}\nexport const deleteOneUser = (user) => {\n  return (dispatch, getState) => {\n    dispatch(userRequestStart());\n    if(user.DS.length !== 0){\n      user.DS.forEach((DSId) => {\n        axios.delete(`http://localhost:8888/api/users/${DSId}/superior`);\n      });\n    }\n    axios\n      .delete(`http://localhost:8888/api/users/${user._id}`)\n      .then(res => {\n        if(user.Superior !== \"\"){\n          axios.delete(`http://localhost:8888/api/users/${user.Superior}/DS/${user._id}`)\n          .then(res => {\n            dispatch(getList(\"\",\"\",\"\",4));\n          })\n        }\n      })\n      .then(res => {\n        dispatch(getList(\"\",\"\",\"\",4));\n      })\n      .catch(error => {\n        dispatch(userRequestFail(error));\n      });\n  }\n}\nexport const updateOne = (user, oldSuperior, newSuperior, history) => {\n  return (dispatch, getState) => {\n    if(oldSuperior !== newSuperior){\n      if(oldSuperior !== \"\" && newSuperior !== \"\"){\n        axios.all([\n          axios.put(`http://localhost:8888/api/users/${user._id}`,user),\n          axios.put(`http://localhost:8888/api/users/${newSuperior}/DS`,{id:user._id}),\n          axios.delete(`http://localhost:8888/api/users/${oldSuperior}/DS/${user._id}`)\n        ])\n        .then(() => history.goBack());\n      }else if(oldSuperior !== \"\" && newSuperior === \"\"){\n        axios.all([\n          axios.put(`http://localhost:8888/api/users/${user._id}`,user),\n          axios.delete(`http://localhost:8888/api/users/${oldSuperior}/DS/${user._id}`)\n        ])\n        .then(history.goBack());\n      }else if(oldSuperior === \"\" && newSuperior !== \"\"){\n        axios.all([\n          axios.put(`http://localhost:8888/api/users/${user._id}`,user),\n          axios.put(`http://localhost:8888/api/users/${newSuperior}/DS`,{id:user._id})\n        ])\n        .then(history.goBack());\n      }\n    }else{\n      axios\n        .put(`http://localhost:8888/api/users/${user._id}`,user)\n        .then(history.push('/'));\n    }\n  }\n}\nexport const getOneUser = (id,history) => {\n  return (dispatch, getState) => {\n    dispatch(userRequestStart());\n    axios\n      .get(`http://localhost:8888/api/users/${id}`)\n      .then(res => {\n        dispatch(userGetSuccess(res.data));\n      })\n      .then(() => {\n        // console.log(history);\n        history.push(`/edit/${id}`);\n\n      })\n      .catch(error => {\n        dispatch(userRequestFail(error));\n      });\n  }\n}"]},"metadata":{},"sourceType":"module"}