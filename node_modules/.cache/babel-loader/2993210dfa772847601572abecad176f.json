{"ast":null,"code":"var _jsxFileName = \"/Users/charleswang/Desktop/coding learning/web/projects/project2/src/client/react/components/create.js\";\nimport React from \"react\";\nimport * as actions from \"../../redux/actions/actions\";\nimport { connect } from 'react-redux';\nconst user = {\n  \"Avatar\": \"http://sadoifhasdfiuhasdfiuh.com\",\n  \"Name\": \"test 123\",\n  \"Sex\": \"Male\",\n  \"Rank\": \"Major\",\n  \"StartDate\": \"Sat Jan 05 2019 00:00:00 GMT-0800 (GMT-08:00)\",\n  \"Phone\": \"2026581651\",\n  \"Email\": \"sdfasdfsd\",\n  \"Superior\": \"\",\n  DS: []\n};\n\nclass Create extends React.Component {\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: () => this.props.createOne(user),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    userList: state\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getList: (search, sortArea, sortFunc, page) => {\n      dispatch(actions.getList(search, sortArea, sortFunc, page));\n    },\n    getListOne: Id => {\n      dispatch(actions.getListOne(Id));\n    },\n    getDS: OfficerId => {\n      dispatch(actions.getDS(OfficerId));\n    },\n    createOne: user => {\n      dispatch(actions.createOne(user));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Create);","map":{"version":3,"sources":["/Users/charleswang/Desktop/coding learning/web/projects/project2/src/client/react/components/create.js"],"names":["React","actions","connect","user","DS","Create","Component","render","props","createOne","mapStateToProps","state","userList","mapDispatchToProps","dispatch","getList","search","sortArea","sortFunc","page","getListOne","Id","getDS","OfficerId"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,OAAZ,MAAyB,6BAAzB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,MAAMC,IAAI,GAAG;AACX,YAAU,kCADC;AAEX,UAAQ,UAFG;AAGX,SAAO,MAHI;AAIX,UAAQ,OAJG;AAKX,eAAa,+CALF;AAMX,WAAS,YANE;AAOX,WAAS,WAPE;AAQX,cAAY,EARD;AASXC,EAAAA,EAAE,EAAC;AATQ,CAAb;;AAWA,MAAMC,MAAN,SAAqBL,KAAK,CAACM,SAA3B,CAAoC;AAClCC,EAAAA,MAAM,GAAG;AACP,WACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,OAAO,EAAE,MAAM,KAAKC,KAAL,CAAWC,SAAX,CAAqBN,IAArB,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADA;AAKD;;AAPiC;;AASpC,MAAMO,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLC,IAAAA,QAAQ,EAAED;AADL,GAAP;AAGD,CAJD;;AAMA,MAAME,kBAAkB,GAAGC,QAAQ,IAAI;AACrC,SAAO;AACLC,IAAAA,OAAO,EAAE,CAACC,MAAD,EAAQC,QAAR,EAAiBC,QAAjB,EAA0BC,IAA1B,KAAmC;AAC1CL,MAAAA,QAAQ,CAACb,OAAO,CAACc,OAAR,CAAgBC,MAAhB,EAAuBC,QAAvB,EAAgCC,QAAhC,EAAyCC,IAAzC,CAAD,CAAR;AACD,KAHI;AAILC,IAAAA,UAAU,EAAGC,EAAD,IAAQ;AAClBP,MAAAA,QAAQ,CAACb,OAAO,CAACmB,UAAR,CAAmBC,EAAnB,CAAD,CAAR;AACD,KANI;AAOLC,IAAAA,KAAK,EAAGC,SAAD,IAAe;AACpBT,MAAAA,QAAQ,CAACb,OAAO,CAACqB,KAAR,CAAcC,SAAd,CAAD,CAAR;AACD,KATI;AAULd,IAAAA,SAAS,EAAGN,IAAD,IAAU;AACnBW,MAAAA,QAAQ,CAACb,OAAO,CAACQ,SAAR,CAAkBN,IAAlB,CAAD,CAAR;AACD;AAZI,GAAP;AAcD,CAfD;;AAiBA,eAAeD,OAAO,CAACQ,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CR,MAA7C,CAAf","sourcesContent":["import React from \"react\";\nimport * as actions from \"../../redux/actions/actions\"\nimport {connect} from 'react-redux';\nconst user = {\n  \"Avatar\": \"http://sadoifhasdfiuhasdfiuh.com\",\n  \"Name\": \"test 123\",\n  \"Sex\": \"Male\",\n  \"Rank\": \"Major\",\n  \"StartDate\": \"Sat Jan 05 2019 00:00:00 GMT-0800 (GMT-08:00)\",\n  \"Phone\": \"2026581651\",\n  \"Email\": \"sdfasdfsd\",\n  \"Superior\": \"\",\n  DS:[]\n};\nclass Create extends React.Component{\n  render() {\n    return (\n    <div>\n      <button onClick={() => this.props.createOne(user)}></button>\n    </div>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    userList: state\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getList: (search,sortArea,sortFunc,page) => {\n      dispatch(actions.getList(search,sortArea,sortFunc,page));\n    },\n    getListOne: (Id) => {\n      dispatch(actions.getListOne(Id));\n    },\n    getDS: (OfficerId) => {\n      dispatch(actions.getDS(OfficerId));\n    },\n    createOne: (user) => {\n      dispatch(actions.createOne(user));\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Create);"]},"metadata":{},"sourceType":"module"}